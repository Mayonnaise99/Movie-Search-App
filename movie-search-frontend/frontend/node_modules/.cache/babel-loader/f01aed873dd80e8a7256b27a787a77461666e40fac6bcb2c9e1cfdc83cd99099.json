{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\Proj0\\\\src\\\\movie-search-frontend\\\\frontend\\\\src\\\\components\\\\MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSearch() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const searchMovies = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.get('http://localhost:5000/api/search', {\n        params: {\n          query\n        }\n      });\n      setMovies(response.data);\n      setError('');\n    } catch (err) {\n      if (err.response && err.response.data.error) {\n        setError(err.response.data.error);\n      } else {\n        setError('An error occurred while fetching data');\n      }\n      setMovies([]);\n    }\n  };\n  // Function to extract month from the release date\n  // const getMonthFromReleaseDate = (releaseDate) => {\n  //     const date = new Date(releaseDate);\n  //     const options = { month: 'long' }; // e.g., \"August\"\n  //     return date.toLocaleString('en-US', options);\n  // };\n\n  const getMonthFromReleaseDate = releaseDate => {\n    try {\n      const date = new Date(releaseDate);\n      if (!isNaN(date)) {\n        return date.toLocaleString('default', {\n          month: 'long'\n        });\n      } else {\n        return 'Unknown';\n      }\n    } catch {\n      return 'Unknown';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchMovies,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a movie\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-results\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release Year: \", movie.Year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release Month: \", getMonthFromReleaseDate(movie.Released)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster,\n            alt: `${movie.Title} poster`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieSearch, \"ZGoyJUwdVD8gvfsshF+AFst3NoI=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MovieSearch","_s","query","setQuery","movies","setMovies","error","setError","searchMovies","e","preventDefault","response","get","params","data","err","getMonthFromReleaseDate","releaseDate","date","Date","isNaN","toLocaleString","month","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","map","movie","Title","Year","Released","src","Poster","alt","imdbID","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/Proj0/src/movie-search-frontend/frontend/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction MovieSearch() {\r\n    const [query, setQuery] = useState('');\r\n    const [movies, setMovies] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    const searchMovies = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/search', {\r\n                params: { query }\r\n            });\r\n            setMovies(response.data);\r\n            setError('');\r\n        } catch (err) {\r\n            if (err.response && err.response.data.error) {\r\n                setError(err.response.data.error);\r\n            } else {\r\n                setError('An error occurred while fetching data');\r\n            }\r\n            setMovies([]);\r\n        }\r\n    };\r\n    // Function to extract month from the release date\r\n    // const getMonthFromReleaseDate = (releaseDate) => {\r\n    //     const date = new Date(releaseDate);\r\n    //     const options = { month: 'long' }; // e.g., \"August\"\r\n    //     return date.toLocaleString('en-US', options);\r\n    // };\r\n\r\n    const getMonthFromReleaseDate = (releaseDate) => {\r\n        try {\r\n            const date = new Date(releaseDate);\r\n            if (!isNaN(date)) {\r\n                return date.toLocaleString('default', { month: 'long' });\r\n            } else {\r\n                return 'Unknown';\r\n            }\r\n        } catch {\r\n            return 'Unknown';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"movie-search\">\r\n            <h1>Movie Search</h1>\r\n            <form onSubmit={searchMovies}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search for a movie\"\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            <div className=\"movie-results\">\r\n                {movies.map(movie => (\r\n                    <div key={movie.imdbID} className=\"movie-card\">\r\n                        <h2>{movie.Title}</h2>\r\n                        <p>Release Year: {movie.Year}</p>\r\n                        <p>Release Month: {getMonthFromReleaseDate(movie.Released)}</p>\r\n                        <p><img src={movie.Poster} alt={`${movie.Title} poster`} /></p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}